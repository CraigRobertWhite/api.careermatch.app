name: Tests

on: [push, pull_request]

env:
  PIPENV_VENV_IN_PROJECT: "1"
  PIPENV_IGNORE_VIRTUALENVS: "1"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      # Set up PostgreSQL: https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-postgresql-service-containers#running-jobs-directly-on-the-runner-machine
      postgres:
        image: postgres
        env:
          POSTGRES_DB: test_devlink
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install pipenv
      run: |
        pip install -U pipenv
        pipenv --version
    - name: Cache dependencies
      uses: actions/cache@v2.1.4
      with:
        path: .venv
        key: ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('Pipfile.lock') }}
    - name: Install dependencies
      run: pipenv install --dev --deploy
    - name: Run tests
      env:
        TEST_DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"
      run: pipenv run pytest
